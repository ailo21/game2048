{"version":3,"sources":["type/ArrowEnum.ts","components/game2048/SquareItem.tsx","util/arrayTools.ts","components/game2048/Game2048.tsx","App.tsx","index.tsx"],"names":["ArrowEnum","SquareItem","col","className","val","style","left","x","top","y","rotate","matrix","n","length","Math","floor","i","j","k","moveLeft","map","row","startArray","endArray","forEach","push","tempArr","concat","sumTempArr","undefined","r","moveRight","tempArrReverse","reverse","tempArrSum","Game2048","matrixDef","useState","setMatrix","stepCount","setStepCount","inputEl","React","useRef","actionStep","action","ArrowLeft","ArrowRight","ArrowDown","newArray","ArrowUp","getRandomInRange","min","max","random","generateSquare","emptySquareCount","alert","squareVariant","squareVal","point","useEffect","id","ref","autoFocus","onKeyUp","event","code","type","index","index2","block","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a81c40b.chunk.js","sourcesContent":["export enum ArrowEnum {\r\n    ArrowUp = \"ArrowUp\",\r\n    ArrowRight = \"ArrowRight\",\r\n    ArrowDown = \"ArrowDown\",\r\n    ArrowLeft = \"ArrowLeft\"\r\n}\r\n","import React, {FC} from 'react';\r\nimport {ItemSquare} from \"../../type/ItemSquare\";\r\ninterface OperationBtnProps{\r\n    col:ItemSquare\r\n}\r\n\r\nconst SquareItem:FC<OperationBtnProps> = ({col}) => {\r\n    return <div\r\n        className={`matrix_item matrix_item__${col.val}`}\r\n        style={{left: `${col.x * 25}%`, top: `${col.y * 25}%`}}\r\n    >\r\n        <span>{col.val>0?col.val:''}</span>\r\n    </div>\r\n};\r\n\r\nexport default SquareItem;","import {ItemSquare} from \"../type/ItemSquare\";\r\n\r\nexport const rotate = (matrix: ItemSquare[][]) => {\r\n    const n = matrix.length;\r\n    const x = Math.floor(n / 2);\r\n    const y = n - 1;\r\n    for (let i = 0; i < x; i++) {\r\n        for (let j = i; j < y - i; j++) {\r\n            const k = matrix[i][j];\r\n            matrix[i][j] = matrix[y - j][i];\r\n            matrix[y - j][i] = matrix[y - i][y - j];\r\n            matrix[y - i][y - j] = matrix[j][y - i]\r\n            matrix[j][y - i] = k\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\nexport const moveLeft = (matrix: ItemSquare[][]) => {\r\n    return matrix.map((row) => {\r\n        let startArray: number[] = [];\r\n        let endArray: number[] = [];\r\n        row.forEach(col => {\r\n            if (col.val > 0) {\r\n                startArray.push(col.val);\r\n            } else {\r\n                endArray.push(0);\r\n            }\r\n        })\r\n        let tempArr = startArray.concat(endArray);\r\n        let sumTempArr: number[] = [];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            if (tempArr[i + 1] !== undefined && tempArr[i] == tempArr[i + 1]) {\r\n                sumTempArr.push(tempArr[i] + tempArr[i + 1]);\r\n                i++;\r\n            } else {\r\n                sumTempArr.push(tempArr[i])\r\n            }\r\n        }\r\n        while (sumTempArr.length < tempArr.length) {\r\n            sumTempArr.push(0);\r\n        }\r\n\r\n        return row.map((r, i) => {\r\n            r.val = sumTempArr[i];\r\n            return r;\r\n        })\r\n    })\r\n}\r\nexport const moveRight = (matrix: ItemSquare[][]) => {\r\n    return matrix.map((row) => {\r\n        let startArray: number[] = [];\r\n        let endArray: number[] = [];\r\n        row.forEach(col => {\r\n            if (col.val > 0) {\r\n                endArray.push(col.val);\r\n            } else {\r\n                startArray.push(0);\r\n            }\r\n        })\r\n        let tempArr = startArray.concat(endArray);\r\n        const tempArrReverse = tempArr.reverse();\r\n        let tempArrSum: number[] = [];\r\n\r\n        for (let i = 0; i < tempArrReverse.length; i++) {\r\n            if (tempArrReverse[i + 1] !== undefined && tempArrReverse[i] == tempArrReverse[i + 1]) {\r\n                tempArrSum.push(tempArrReverse[i] + tempArrReverse[i + 1]);\r\n                i++;\r\n            } else {\r\n                tempArrSum.push(tempArrReverse[i]);\r\n            }\r\n        }\r\n        while (tempArrSum.length < tempArrReverse.length) {\r\n            tempArrSum.push(0);\r\n        }\r\n        tempArr = tempArrSum.reverse();\r\n\r\n\r\n        return row.map((r, i) => {\r\n            r.val = tempArr[i];\r\n            return r;\r\n        })\r\n    })\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport SquareItem from \"./SquareItem\";\r\nimport {ArrowEnum} from \"../../type/ArrowEnum\";\r\nimport {Input} from 'antd'\r\nimport {ItemSquare} from \"../../type/ItemSquare\";\r\nimport {moveLeft, moveRight, rotate} from \"../../util/arrayTools\";\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst Game2048 = () => {\r\n    const matrixDef: ItemSquare[][] = [\r\n        [{x: 0, y: 0, val: 0}, {x: 1, y: 0, val: 0}, {x: 2, y: 0, val: 0}, {x: 3, y: 0, val: 0}],\r\n        [{x: 0, y: 1, val: 0}, {x: 1, y: 1, val: 0}, {x: 2, y: 1, val: 0}, {x: 3, y: 1, val: 0}],\r\n        [{x: 0, y: 2, val: 0}, {x: 1, y: 2, val: 0}, {x: 2, y: 2, val: 0}, {x: 3, y: 2, val: 0}],\r\n        [{x: 0, y: 3, val: 0}, {x: 1, y: 3, val: 0}, {x: 2, y: 3, val: 0}, {x: 3, y: 3, val: 0}],\r\n    ];\r\n    const [matrix, setMatrix] = useState(matrixDef);\r\n    const [stepCount, setStepCount] = useState<number>(0);\r\n    const inputEl = React.useRef(null);\r\n\r\n    function handleKeyPress(event: React.KeyboardEvent): any {\r\n        if (event.code === ArrowEnum.ArrowUp\r\n            || event.code === ArrowEnum.ArrowRight\r\n            || event.code === ArrowEnum.ArrowDown\r\n            || event.code === ArrowEnum.ArrowLeft\r\n        ) {\r\n            setStepCount(stepCount + 1);\r\n            actionStep(event.code);\r\n        }\r\n    }\r\n\r\n    const actionStep = (action: ArrowEnum) => {\r\n\r\n        if (action === ArrowEnum.ArrowLeft) {\r\n            setMatrix(moveLeft(matrix));\r\n        } else if (action == ArrowEnum.ArrowRight) {\r\n\r\n            setMatrix(moveRight(matrix));\r\n        } else if (action == ArrowEnum.ArrowDown) {\r\n            rotate(matrix);\r\n\r\n            let newArray =moveLeft(matrix);\r\n\r\n            rotate(newArray);\r\n            rotate(newArray);\r\n            rotate(newArray);\r\n            setMatrix(newArray)\r\n\r\n        } else if (action == ArrowEnum.ArrowUp) {\r\n\r\n            rotate(matrix);\r\n\r\n            let newArray =moveRight(matrix);\r\n\r\n            rotate(newArray);\r\n            rotate(newArray);\r\n            rotate(newArray);\r\n            setMatrix(newArray)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function getRandomInRange(min: number, max: number) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    const generateSquare = () => {\r\n        //определим кол-во оставшихся пустых клеток\r\n        let emptySquareCount: number = 0;\r\n        matrix.forEach(row => row.map(col => {\r\n            if (col.val < 1) {\r\n                emptySquareCount++;\r\n            }\r\n        }))\r\n        if (emptySquareCount < 1) {\r\n            alert('Game over');\r\n            setMatrix(matrixDef);\r\n        }\r\n\r\n        const squareVariant = [2, 2, 2, 4];\r\n        const squareVal = squareVariant[Math.floor(Math.random() * squareVariant.length)];\r\n        let point: ItemSquare = {x: 0, y: 0, val: 0};\r\n        do {\r\n            point.x = getRandomInRange(0, 3);\r\n            point.y = getRandomInRange(0, 3);\r\n        } while (!(matrix[point.x][point.y].val == 0))\r\n        matrix[point.x][point.y].val = squareVal;\r\n        setMatrix([...matrix]);\r\n    }\r\n\r\n    const newGame = () => {\r\n        setMatrix(matrixDef);\r\n        setStepCount(1);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateSquare();\r\n    }, []);\r\n    useEffect(() => {\r\n        generateSquare();\r\n    }, [stepCount]);\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Input id={\"InputTool\"} ref={inputEl} autoFocus onKeyUp={handleKeyPress} type={\"text\"}/>\r\n            <div className={\"matrix_wrap\"}>\r\n                <div className={\"matrix\"}>\r\n                    {matrix.map((row, index) => {\r\n                        return row.map((col, index2) => {\r\n                                return <SquareItem key={`${index}${index2}`} col={col}/>\r\n                            }\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className={\"matrix_tools\"}>\r\n                    <Button block onClick={newGame}>\r\n                        Новая игра\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Game2048;","import React from 'react';\nimport Game2048 from \"./components/game2048/Game2048\";\nimport './style/style.css';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game2048/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}